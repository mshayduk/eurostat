{
    "contents" : "\nsource(\"utils.R\")\n\nshinyServer(function(input, output) {\n    \n    selectedcountry <- reactive({\n        if(!is.null(input$selcountry))\n            choices[grep(paste(input$selcountry, sep = \"\"), x=choices)]\n        else\n            return(curcountry)\n    })\n    \n    output$helptext <- renderText({ \n        paste(\"<br><div align='center'><table width=190><tr><td align='justify' style='font-size: small;'>\n              This is the explorer of the annual unemployment rate in European Union.<br><br> \n              Select parameters to subset the data and switch tabs to see different data visualizations\n              </td></tr></table></div>\", sep=\"\")    \n    })\n    \n    output$oyear <- renderPrint({input$year})\n    output$ocountry <- renderPrint({input$selcountry})\n    output$oage <- renderPrint({\n        ageclass <- c(\"< 25 years\" = \"Y_LT25\", \"> 25 years\" = \"Y25-74\", \"All\" = \"TOTAL\")\n        names(ageclass)[which(ageclass==input$age)]\n    })\n    \n    output$maptitle <- renderText({\n        ageclass <- c(\"< 25 years\" = \"Y_LT25\", \"> 25 years\" = \"Y25-74\", \"All\" = \"TOTAL\")\n        age <- names(ageclass)[which(ageclass==input$age)]\n        paste(\"<br><p>&nbsp;&nbsp;<b style='color:black'>Unemployment in EU. Year = \", input$year, \n              \",  Age: \", age, \"</b></p>\",sep = \"\")\n    })\n    \n    # plots\n    output$gvisbarplot <- renderGvis({\n        subset <- rawdata[grep(paste(input$age,sep=\"\"), x=rawdata$s_adj.sex.age.unit.geo.time), \n                          c(\"s_adj.sex.age.unit.geo.time\", input$year, \"isocode\", \"country\")]\n        subset <- subset[complete.cases(subset), ]\n        colnames(subset)[2] <- \"Unemployment\"\n        subset <- subset[order(subset$Unemployment, decreasing = T), ]\n        ageclass <- c(\"< 25 years\" = \"Y_LT25\", \"> 25 years\" = \"Y25-74\", \"All\" = \"TOTAL\")\n        age <- names(ageclass)[which(ageclass==input$age)]\n        title <- paste(\"Unemployment in EU. Year = \", input$year, \",    Age: \", age, sep = \"\")\n        gvisBarChart(subset, xvar=\"country\", yvar=\"Unemployment\",\n                     options = list( title = title,\n                                     bar=\"{groupWidth:'90%'}\",\n                                     hAxis=\"{format:'##,##%'}\",\n                                     legend=\"{ position: 'top'}\",\n                                     width=700,\n                                     height=600))\n        \n        \n    })\n    \n    output$gvismap <- renderGvis({\n        subset <- rawdata[grep(paste(input$age,sep=\"\"), x=rawdata$s_adj.sex.age.unit.geo.time), \n                          c(\"s_adj.sex.age.unit.geo.time\", input$year, \"isocode\", \"country\")]\n        subset <- subset[complete.cases(subset), ]\n        ageclass <- c(\"< 25 years\" = \"Y_LT25\", \"> 25 years\" = \"Y25-74\", \"All\" = \"TOTAL\")\n        age <- names(ageclass)[which(ageclass==input$age)]\n        \n        colnames(subset)[2] <- \"Unemployment\"\n        gvisGeoChart(subset, locationvar = \"isocode\", \n                     colorvar = \"Unemployment\",     \n                     hovervar = \"country\", \n                     options = list(region=\"150\", \n                                    dataMode=\"regions\",\n                                    width=700, \n                                    height=400))\n    })\n    \n    output$gviscontryplot <- renderGvis({\n        subset <- rawdata[grep(paste(selectedcountry(), sep=\"\"), x=rawdata$isocode), ]\n        countryname <- subset$country[1]\n        subset <- subset[1:(dim(subset)[2]-2)]\n        subset <- data.frame(t(subset[-1]))\n        colnames(subset) <- c(\"All\", \"> 25 years\", \"< 25 years\")\n        subset <- subset[-1, ]\n        subset <- head(subset, n=-2)\n        subset$Year <- as.numeric(row.names(subset))\n        title <- paste(\"Unemployment in \", countryname, sep = \"\")\n        \n        gvisColumnChart(subset, xvar=\"Year\", yvar=c(\"< 25 years\", \"> 25 years\", \"All\"),\n                        options=list(vAxes=\"[{title: 'Unemployment Rate', format:'##,##%'}]\",\n                                     hAxes=\"[{title: 'Year'}]\",\n                                     title=title,\n                                     bar=\"{groupWidth:'90%'}\",\n                                     legend=\"{ position: 'top'}\",\n                                     width=700,\n                                     height=400\n                        ))\n    })\n    \n    output$ui <- renderUI({\n        if(input$tabs==\"contryplot\"){\n            selectInput(inputId = \"selcountry\", \n                        label = \"Select Country:\",\n                        choices = choices,\n                        selected = selectedcountry()\n            )\n        }\n    })\n    \n    outputOptions(output, \"gviscontryplot\", suspendWhenHidden = FALSE)\n    outputOptions(output, \"gvisbarplot\", suspendWhenHidden = FALSE)\n    outputOptions(output, \"gvismap\", suspendWhenHidden = FALSE)\n\n})",
    "created" : 1456427537171.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3174669942",
    "id" : "81AEAD38",
    "lastKnownWriteTime" : 1456439250,
    "path" : "~/Work/Developer/Coursera/DataScience/Developing_Data_Products/eurostat/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}